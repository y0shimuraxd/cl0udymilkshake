"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./src/utils/api.ts":
/*!**************************!*\
  !*** ./src/utils/api.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEvent: () => (/* binding */ createEvent),\n/* harmony export */   deleteEvent: () => (/* binding */ deleteEvent),\n/* harmony export */   fetchCategories: () => (/* binding */ fetchCategories),\n/* harmony export */   fetchEvents: () => (/* binding */ fetchEvents),\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   login: () => (/* binding */ login),\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   register: () => (/* binding */ register),\n/* harmony export */   updateEvent: () => (/* binding */ updateEvent)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(pages-dir-browser)/./node_modules/axios/index.js\");\n\nconst API_BASE_URL = \"http://localhost:8000/api\" || 0;\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n// Add auth token to requests if available\napi.interceptors.request.use((config)=>{\n    const token = localStorage.getItem('access_token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n// Handle token refresh on 401 errors\napi.interceptors.response.use((response)=>response, async (error)=>{\n    const originalRequest = error.config;\n    if (error.response?.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (refreshToken) {\n            try {\n                const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(`${API_BASE_URL}/token/refresh/`, {\n                    refresh: refreshToken\n                });\n                const { access } = response.data;\n                localStorage.setItem('access_token', access);\n                return api(originalRequest);\n            } catch (refreshError) {\n                // Refresh failed, redirect to login\n                localStorage.removeItem('access_token');\n                localStorage.removeItem('refresh_token');\n                localStorage.removeItem('user');\n                window.location.href = '/';\n                return Promise.reject(refreshError);\n            }\n        }\n    }\n    return Promise.reject(error);\n});\n// Events API\nconst fetchEvents = async (filters = {})=>{\n    try {\n        const response = await api.get('/events/', {\n            params: filters\n        });\n        return response.data.results || response.data; // Handle pagination if needed\n    } catch (error) {\n        console.error('Error fetching events:', error);\n        throw new Error('Failed to fetch events');\n    }\n};\nconst createEvent = async (eventData)=>{\n    try {\n        const response = await api.post('/events/', eventData);\n        return response.data;\n    } catch (error) {\n        console.error('Error creating event:', error);\n        if (error.response?.data) {\n            throw new Error(error.response.data.detail || 'Failed to create event');\n        }\n        throw new Error('Failed to create event');\n    }\n};\nconst updateEvent = async (id, eventData)=>{\n    try {\n        const response = await api.put(`/events/${id}/`, eventData);\n        return response.data;\n    } catch (error) {\n        console.error('Error updating event:', error);\n        throw new Error('Failed to update event');\n    }\n};\nconst deleteEvent = async (id)=>{\n    try {\n        await api.delete(`/events/${id}/`);\n    } catch (error) {\n        console.error('Error deleting event:', error);\n        throw new Error('Failed to delete event');\n    }\n};\n// Auth API - исправленные endpoints\nconst login = async (credentials)=>{\n    try {\n        const response = await api.post('/login/', credentials);\n        // Сохраняем токены\n        if (response.data.access) {\n            localStorage.setItem('access_token', response.data.access);\n        }\n        if (response.data.refresh) {\n            localStorage.setItem('refresh_token', response.data.refresh);\n        }\n        return response.data;\n    } catch (error) {\n        console.error('Error logging in:', error);\n        if (error.response?.data) {\n            throw new Error(error.response.data.detail || 'Invalid credentials');\n        }\n        throw new Error('Invalid credentials');\n    }\n};\nconst register = async (data)=>{\n    try {\n        const response = await api.post('/register/', data);\n        // Сохраняем токены если они возвращаются при регистрации\n        if (response.data.access) {\n            localStorage.setItem('access_token', response.data.access);\n        }\n        if (response.data.refresh) {\n            localStorage.setItem('refresh_token', response.data.refresh);\n        }\n        return response.data;\n    } catch (error) {\n        console.error('Error registering:', error);\n        if (error.response?.data) {\n            // Обработка ошибок валидации от Django\n            const errorMessages = [];\n            for (const [field, messages] of Object.entries(error.response.data)){\n                if (Array.isArray(messages)) {\n                    errorMessages.push(`${field}: ${messages.join(', ')}`);\n                } else {\n                    errorMessages.push(`${field}: ${messages}`);\n                }\n            }\n            throw new Error(errorMessages.join('\\n') || 'Registration failed');\n        }\n        throw new Error('Registration failed');\n    }\n};\nconst logout = async ()=>{\n    try {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (refreshToken) {\n            await api.post('/logout/', {\n                refresh: refreshToken\n            });\n        }\n    } catch (error) {\n        console.error('Error logging out:', error);\n    } finally{\n        // Очищаем токены в любом случае\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user');\n    }\n};\n// Get current user info\nconst getCurrentUser = async ()=>{\n    try {\n        const response = await api.get('/me/');\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching user:', error);\n        throw error;\n    }\n};\n// Categories API\nconst fetchCategories = async ()=>{\n    try {\n        const response = await api.get('/categories/');\n        return response.data.results || response.data;\n    } catch (error) {\n        console.error('Error fetching categories:', error);\n        return [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/api.ts\n"));

/***/ })

});